
    <h1>Página de insumos</h1>
    <hr>
    <div>
      {{#each insumos}}
      <li>{{descricao}} - {{valor}}</li>

      {{else}}
      <p>Nenhum insumo cadastrado.</p>
      {{/each}}
      
    </div>
    <h2>Insumos cadastrados</h2>
<div id="app">
    <table>
      <tr>
        <th>id</th>
        <th>nome</th>
        <th>valor</th>
        <th>ações</th>
      </tr>
      <tr v-for="(insumo, i) in insumos" :key="i">
        <td>\{{insumo.id}}</td>
        <td>\{{insumo.name}}</td>
        <td>\{{insumo.price}}</td>
        <td><button @click="add(insumo)">+</button></td>
      </tr>
    </table>

    <h2>Insumos selecionados</h2>

    <table>
      <tr>
        <th>id</th>
        <th>nome</th>
        <th>valor</th>
        <th>quantidade</th>
        <th>total</th>
        <th>ações</th>
      </tr>
      <tr v-for="(insumo, i) in selecionados" :key="i">
        <td>\{{insumo.id}}</td>
        <td>\{{insumo.name}}</td>
        <td>\{{insumo.price}}</td>
        <td><input type="number" v-model="insumo.qty"></td>
        <td>\{{   (insumo.price||0) * (insumo.qty||0)  }}</td>
        <td><button @click="remove(insumo)">-</button></td>
      </tr>
    </table>


    <button @click="save">salvar</button>

    {{!-- Loading enquanto carrega --}}
    <div v-if="loading">carregando</div>

    {{!-- Mensagem de sucesso --}}
    <div v-if="message">\{{message}}</div>



  </div>

  <script>

    var app = new Vue({
      el: '#app',

      // DADOS
      data: {
        // Lista de itens
        insumos: null,
        
        /*[
          { id: 1, name: 'pipoca', price: 3.49 },
          { id: 2, name: 'guaraná', price: 4.49 },
          { id: 3, name: 'sal', price: .49 },
          { id: 4, name: 'manteiga', price: 10.49 },
        ],*/

        // Itens selecionados
        selecionados: [

        ],

        // Carregando
        loading: false,

        //mensage
        message: ''

      },


      // MÉTODOS  
      methods: {

        //
        add(item) {
          this.selecionados.push({ ...item, qty: 0 })
        },

        //
        remove(item) {
          this.selecionados = this.selecionados.filter(row => row.id !== item.id);
        },

        //
        async save() {
          this.loading = true;
          const data = this.selecionados.map(row => ({ id: row.id, qty: row.qty }))
          console.log(data);
          const url = 'http://localhost:3001/ajax/insumos';
          const resultado = await axios.post(url, data);
          this.loading = false

          this.message = resultado.data.message;
          console.log(resultado)

        }
      },
      mounted () {
      axios
        .get('/envio')
        .then(response => {
          console.log(response.data)          
          this.insumos = response.data
        })
        .catch(error => {
          console.log(error)
          this.errored = true
        })
        .finally(() => this.loading = false)
      }
    })

  </script>