<h3>Importar base de dados</h3>
{{#each erros}}
    <div class="alert alert-danger">{{texto}}</div>
{{else}}

{{/each}}

<div class="card">
    <div class="card-body">
        <form action="/insumos/importar" method="POST" enctype="multipart/form-data">
            <label for="base">Base de dados</label>
            <select name="base" class="form-control" required>
                <option value="0">Selecione a fonte base de dados que deseja importar.</option>
                {{#each bases}}
                <option value="{{_id}}">{{nome}}</option>
                {{else}}
                <option value="0">Nenhuma base cadastrada.</option>
                {{/each}}                
            </select> </br>
            <label for="custom-file">Arquivo de dados da fonte.</label>
            <div class="custom-file mb-4">                
                <input type="file" class="custom-file-input" id="arquivo" name="arquivo" required>
                <label for="arquivo" class="custom-file-label">Anexar arquivo XLS ou XLSX.</label>
            </div>

            <label for="linha">Linha do cabeçalho da tabela.</label>
            <input type="text" name="linha" id="linha" class="form-control" placeholder="Digite o numero da linha que contém o cabeçalho dos dados." required>
            <br>
            <input type="hidden"  id="plan_json" name="plan_json" value="teste">
            <button type="submit" class="btn btn-success">Importar</button>
        </form>
    </div>
</div>

<script>
    $(document).ready(() => {
        $('#arquivo').on('change', function (e) {
            const file = e.target.files[0];
            console.log(file)
            onPickFile(file);
        });

        function onPickFile(file) {
            var reader = new FileReader();
            reader.onload = e => {
                var data = e.target.result;
                var workbook = XLSX.read(data, { type: "binary" });
                json = toJson(workbook)
                $('#plan_json').val(JSON.stringify(json));
                console.log(json);
            };

            reader.readAsBinaryString(file);
        }

        function toJson(workbook) {
            var result = {};
            workbook.SheetNames.forEach(function (sheetName) {
                var sheet = workbook.Sheets[sheetName];
                result[sheetName] = XLSX.utils.sheet_to_json(sheet);
            });
            return result;
        }
    })


    </script>