<h2>Criar requisição</h2>

<div id="app-insumos">
    <div class="card">
        <div class="card-body">
            <table id="table-insumos" style="font-size:13px" class="table table-striped table-bordered table-sm" style="width:100%">
                <thead class="thead-dark">
                    <tr>
                        <th>Origem</th>
                        <th>Código</th>
                        <th>Descrição</th>
                        <th>Unidade</th>
                        <th>Preço</th>
                        <th>Observações</th>
                        <th >Ações</th>
                    </tr>
                </thead>
                <tbody>   
                    <tr v-for="(insumo, i) in insumos" :key="i">
                        <td>\{{insumo.base_origem.abreviacao}}</td>
                        <td>\{{insumo.codigo_origem}}</td>
                        <td>\{{insumo.descricao}}</td>
                        <td>\{{insumo.unidade_medida}}</td>
                        <td>\{{insumo.preco_mediano | brl}}</td>
                        <td>\{{insumo.observacao}}</td>
                        <td><button @click="add(insumo)"><i class="material-icons md-18">add_circle</i></button></td>
                    </tr>
                </tbody>    
            </table>
        </div>
    </div>
    <br>
    <div class="card">
            <div class="card-body">
                <h4>Escolha os ítens </h4>
                <div v-if="message" class="alert alert-warning" role="alert">
                    \{{message}}
                </div>
            
            <table style="font-size:13px" class="table table-striped table-bordered table-sm">
                    <thead class="thead-dark">
                        <tr>                            
                            <th>Base.Código</th>
                            <th>Descrição</th>
                            <th>Unidade</th>
                            <th>Quant.</th>
                            <th>Preço</th>
                            <th>Total</th>
                            <th >Ações</th>
                        </tr>  
                </thead>              
                <tbody>                   
                    <tr v-for="(selecionado, index) in requisicao.insumos">
                            <td>\{{selecionado.base_origem.abreviacao}}.\{{selecionado.codigo_origem}}</td>
                            <td>\{{selecionado.descricao}}</td>
                            <td>\{{selecionado.unidade_medida}}</td>
                            <td><input type="number"  class="form-control" style="width:60pt; font-size:13px;"  v-model.number="selecionado.quantidade" name="" id="" value=""></td>
                            <td>\{{selecionado.preco_mediano  | brl }}</td>
                            <td>\{{selecionado.preco_mediano * selecionado.quantidade || 0  | brl}}</td>
                            <td><button v-on:click="remove(index)"><i class="material-icons md-18">remove_circle</i></button></td>
                    </tr>
                </tbody>
                </table>
                <div v-if="total != 0">
                    <h4>Total da Requisição: \{{total | brl}}</h4> 
                </div>

                <h5 v-if="requisicao.insumos.length === 0">Adicione um insumo.</h5>
                <div class="form-group">

                    <hr>
                    <label for="solicitante">Campus de destino: </label>
                        <select class="form-control" name="" id="destino" v-model="requisicao.campus_destino" required>
                            <option value="">Selecione</option>

                            <option v-for="(campus, index) in campi" :value="campus._id">\{{campus.nome}} </option>

                        </select><br>

                    
                    <label for="observacoes">Observações: </label>
                        <textarea v-model="requisicao.observacoes" class="form-control" name="" id="observacoes" cols="30" rows="3"></textarea></br>
                    <label for="solicitante">Solicitante: </label>
                        <select class="form-control" name="" id="solicitante" disabled></select>

                </div>
            
                <div>
                    <button class="btn btn-success" v-on:click="salvar(ordemCompra = true)">Gerar ordem de compra</button>
                    <button class="btn btn-primary" @click="salvar(ordemCompra = false)">Salvar</button>
                </div>
                {{!-- Loading enquanto carrega --}}
                <div v-if="loading">Carregando...</div>
            </div>
    </div>
</div>

<script>
    Vue.filter('brl', function (value) {
        return Number(value).toLocaleString('pt-BR', { 
                style:'currency', currency:'BRL'
              })
    })

    // Vue
    appRequisicoes = new Vue({
        el: "#app-insumos",
        data: {
            insumos: [],
            campi: [],
            opcoes: null,
            requisicao: {
                insumos: [],
                ordem_compra: false,
                campus_destino: null,
                observacoes: '',
                status: 'Salva'

            },
            //selecionados: [],
            valor_total: 0,
            
            error: false,
            message: '',
            loading: false,
            ordemCompra: false,
            
        },
        computed: {
            total () {
                return this.requisicao.insumos.reduce((somaTotal, valorAtual) => {
                    return Number(somaTotal) + Number(valorAtual.preco_mediano) * Number(valorAtual.quantidade)
                }, 0) || 0
            }
        },
        methods: {
            remove (index){                
                this.requisicao.insumos.splice(index, 1)
            },
            add (item) {
                item.id_original = item._id
                if(!this.requisicao.insumos.some(insumo => (insumo.id_original === item._id))){                    
                    this.requisicao.insumos.push({...item, quantidade: 1.0})
                    this.message = false
                }
                
            },
            async salvar() {
                this.loading = true
                if(this.requisicao.insumos.length > 0){ // Verifica se existem itens na requisicao.
                    var url = '/requisicoes/salvarRequisicao'
                    var destino
                    if (this.ordemCompra) {                        
                        destino = '/requisicoes/ordens'
                        this.requisicao.ordem_compra = true
                        this.requisicao.status = 'Solicitada'
                    }else{
                        destino = '/requisicoes/'
                    }
                    const data = {}
                    data.requisicao = this.requisicao
                    //data.insumos = insumos
                    //data.observacoes = this.observacoes
                    //data.campus_destino = this.campus_destino
                    //data.ordem_compra = this.ordemCompra                   
                    const resultado = await axios.post(url, data)
                    window.location.href = destino
                    this.menssage = resultado.data.message
                }else{
                    this.message = "Inclua itens na requisicao."                    
                }
                this.loading = false              
            },
        },
        async mounted () {
            axios
            .get('/insumos/ajax/load')
            .then(response => (this.insumos = response.data))

            //Carregar campus destino
            axios
            .post('/admin/ajax/campi')
            .then(response => (this.campi = response.data))
        }
    })     
</script>